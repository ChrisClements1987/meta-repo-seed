[tool:pytest]
# Pytest configuration for meta-repo-seed project

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
pythonpath = src

# Output and coverage options (pytest-cov enabled)
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=seeding
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=75

# Markers for test categorization
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    github: Tests that require GitHub CLI integration
    slow: Tests that take a long time to run
    network: Tests that require network connectivity
    asyncio: Async tests that require asyncio support
    
# Minimum Python version
minversion = 6.0

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Temporary directory cleanup
# Keep temporary directories for debugging if tests fail
# tmp_path_retention_count = 3
# tmp_path_retention_policy = "failed"

# Parallel execution settings (when pytest-xdist is available)
# addopts = -n auto

# Log settings for debugging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S