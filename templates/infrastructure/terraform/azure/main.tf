# Azure Infrastructure for {{PROJECT_NAME}}
# Generated by Meta-Repo Seeding System

# Create Resource Group
resource "azurerm_resource_group" "main" {
  name     = "rg-{{PROJECT_NAME}}-${var.environment}"
  location = var.azure_region

  tags = var.common_tags
}

# Create Virtual Network
resource "azurerm_virtual_network" "main" {
  name                = "vnet-{{PROJECT_NAME}}-${var.environment}"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name

  tags = var.common_tags
}

# Create Subnet
resource "azurerm_subnet" "internal" {
  name                 = "snet-internal"
  resource_group_name  = azurerm_resource_group.main.name
  virtual_network_name = azurerm_virtual_network.main.name
  address_prefixes     = ["10.0.2.0/24"]
}

# Create Public IP for Load Balancer
resource "azurerm_public_ip" "main" {
  name                = "pip-{{PROJECT_NAME}}-${var.environment}"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name
  allocation_method   = "Static"
  sku                 = "Standard"

  tags = var.common_tags
}

# Create Network Security Group
resource "azurerm_network_security_group" "main" {
  name                = "nsg-{{PROJECT_NAME}}-${var.environment}"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name

  security_rule {
    name                       = "HTTP"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "80"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  security_rule {
    name                       = "HTTPS"
    priority                   = 1002
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "443"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  tags = var.common_tags
}

# Create App Service Plan
resource "azurerm_service_plan" "main" {
  name                = "asp-{{PROJECT_NAME}}-${var.environment}"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  os_type             = "Linux"
  sku_name           = var.app_service_sku

  tags = var.common_tags
}

# Create Web App
resource "azurerm_linux_web_app" "main" {
  name                = "app-{{PROJECT_NAME}}-${var.environment}"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_service_plan.main.location
  service_plan_id     = azurerm_service_plan.main.id

  site_config {
    always_on = var.environment != "dev"
    
    application_stack {
      docker_image     = "{{GITHUB_USERNAME}}/{{PROJECT_NAME}}"
      docker_image_tag = "latest"
    }
  }

  app_settings = {
    "DOCKER_REGISTRY_SERVER_URL" = "https://index.docker.io"
    "ENVIRONMENT"                = var.environment
  }

  tags = var.common_tags
}

# Create Azure Database for PostgreSQL (optional)
resource "azurerm_postgresql_flexible_server" "main" {
  count = var.enable_database ? 1 : 0

  name                   = "psql-{{PROJECT_NAME}}-${var.environment}"
  resource_group_name    = azurerm_resource_group.main.name
  location               = azurerm_resource_group.main.location
  version                = "13"
  administrator_login    = "{{PROJECT_NAME}}admin"
  administrator_password = var.database_password
  zone                   = "1"

  storage_mb = var.database_storage_mb

  sku_name   = var.database_sku

  tags = var.common_tags
}

# Outputs
output "resource_group_name" {
  value = azurerm_resource_group.main.name
}

output "web_app_url" {
  value = "https://${azurerm_linux_web_app.main.default_hostname}"
}

output "public_ip_address" {
  value = azurerm_public_ip.main.ip_address
}
